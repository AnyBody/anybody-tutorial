# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, AnyBody Technology
# This file is distributed under the same license as the AnyBody Tutorials
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AnyBody Tutorials 7.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-08 15:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../contributing.rst:2
msgid "Contributing"
msgstr ""

#: ../../contributing.rst:5
msgid "We highly appreciate any contributions to Tutorials!"
msgstr ""

#: ../../contributing.rst:7
msgid ""
"If you find typos, missing links or anything else wrong, don't hesitate "
"to fix it."
msgstr ""

#: ../../contributing.rst:9
msgid ""
"It is as easy as forking `the repository on GitHub "
"<https://github.com/AnyBody/anybody-tutorial>`__ , making your changes, "
"and issuing a pull request.  If you have any questions about this process"
" don’t hesitate to ask."
msgstr ""

#: ../../contributing.rst:16
msgid "Building the tutorials"
msgstr ""

#: ../../contributing.rst:18
msgid ""
"The tutorials are created using `sphinx <https://www.sphinx-doc.org/>`_, a"
" tool for software documentation. Sphinx converts ReStructuredText(.rst) "
"files into html, pdf or other formats. ReStructuredTexts are simple text "
"files with extra markup to define headers and formating. Having the "
"tutorials as ReStructuredText makes it easy to control changes to the "
"documents and ensure consistent style."
msgstr ""

#: ../../contributing.rst:24
msgid ""
"The tutorials are automatically build with sphinx when commits are pushed"
" to the github repository. The process is handle by `Travis CI, here "
"<https://travis-ci.org/AnyBody/anybody-tutorial>`_. If the build fails, "
"for example because of wrong reST syntax etc, the Pull Request can not be"
" merged."
msgstr ""

#: ../../contributing.rst:30
msgid ""
"Once the pull request is accepted on Github and the changes are merged to"
" the master branch the tutorials becomes availble online."
msgstr ""

#: ../../contributing.rst:33
msgid "The newest released version of the tutorials are available at:"
msgstr ""

#: ../../contributing.rst:35
msgid "https://anyscript.org/tutorials"
msgstr ""

#: ../../contributing.rst:37
msgid "The newest development version (current master branch) is availble at:"
msgstr ""

#: ../../contributing.rst:39
msgid "https://anyscript.org/tutorials/dev"
msgstr ""

#: ../../contributing.rst:43
msgid "Building the tutorials locally"
msgstr ""

#: ../../contributing.rst:45
msgid ""
"Even though the tutorials are build automatically, it is also possible to"
" build them locally to view the layout and see results before pushing "
"changes to the server. It is often not necesssary when making small fixes"
" to existing tutorials. But when writing major new sections it nice to "
"view how things look."
msgstr ""

#: ../../contributing.rst:50
msgid ""
"The easiest way to install needed packages tools, is to have the "
"`Anaconda Python distribution <https://www.continuum.io/downloads>`_."
msgstr ""

#: ../../contributing.rst:52
msgid "Then run the following commands to install the necesssary packages."
msgstr ""

#: ../../contributing.rst:58
msgid ""
"Once the packages are install run this command to build the tutorial "
"files."
msgstr ""

#: ../../contributing.rst:64
msgid ""
"Once complete open the file: ``build/html/index.html`` in a browser to "
"view the result."
msgstr ""

#: ../../contributing.rst:69
msgid "Short ReStructuredText guide"
msgstr ""

#: ../../contributing.rst:71
msgid ""
"There are plenty of guides on ReStructuredText available on Google. So "
"here is just a quick run through over some of the reST concepts which are"
" important for the tutorials."
msgstr ""

#: ../../contributing.rst:75
msgid "Paragraphs"
msgstr ""

#: ../../contributing.rst:77
msgid ""
"Any block of text is a paragraph. Paragraphs must be separated by one or "
"more blank lines. Identation matters in reST, so lines of the same "
"paragraph must be left aligned to the same indentation."
msgstr ""

#: ../../contributing.rst:81
msgid "one asterisk: :literal:`*text*` for emphasis (italics),"
msgstr ""

#: ../../contributing.rst:82
msgid "two asterisks: :literal:`**text**` for strong emphasis (boldface), and"
msgstr ""

#: ../../contributing.rst:83
msgid "backquotes: :literal:` ``text`` ` for code samples."
msgstr ""

#: ../../contributing.rst:85
msgid ""
"There are also options for :subscript:`subscript` and "
":superscript:`superscript` plus more:"
msgstr ""

#: ../../contributing.rst:92
msgid "Headers"
msgstr ""

#: ../../contributing.rst:107
msgid "Lists and Quote-like"
msgstr ""

#: ../../contributing.rst:119
msgid "Quotes are just paragraph indented more than the surrounding paragraphs."
msgstr ""

#: ../../contributing.rst:131
msgid "Highlighting code"
msgstr ""

#: ../../contributing.rst:132
msgid ""
"Highlighting AnyScript code snippets is also supported, using the "
"``pygments_anyscript`` extension to pygments."
msgstr ""

#: ../../contributing.rst:135
msgid ""
"AnyScript highlighting is started using the ``code-block`` directive and "
"specifing ``AnyScriptDoc`` as the highlighting language."
msgstr ""

#: ../../contributing.rst:143
msgid ""
"The ``AnyScriptDoc`` is highlighter specifically for the documentation in"
" sphinx. It can highlight AnyScript code even if the syntax is not "
"correct, and any code fenced with **§** is :red:`§marked in red§`."
msgstr ""

#: ../../contributing.rst:147
msgid "Here is an example"
msgstr ""

#: ../../contributing.rst:158
msgid "Which gives the following:"
msgstr ""

#: ../../contributing.rst:167
msgid "Valid values for the highlighting languages are:"
msgstr ""

#: ../../contributing.rst:169
msgid "``none``: no highlighting"
msgstr ""

#: ../../contributing.rst:170
msgid "``AnyScript``: AnyScript (Syntax must be valid)"
msgstr ""

#: ../../contributing.rst:171
msgid "``AnyBodyDoc`` AnyScript (Allows invalid syntax)"
msgstr ""

#: ../../contributing.rst:172
msgid "``python/c++/ruby`` Different known programming languages"
msgstr ""

#: ../../contributing.rst:173
msgid "``rest`` ReStructuredText"
msgstr ""

#: ../../contributing.rst:174
msgid ""
"... and any other `lexer alias that Pygments supports "
"<https://pygments.org/docs/lexers/>`_."
msgstr ""

#: ../../contributing.rst:188
msgid "noindex"
msgstr ""

