# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, AnyBody Technology
# This file is distributed under the same license as the AnyBody Tutorials
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AnyBody Tutorials 7.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-08 15:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../Muscle_modeling/lesson1.rst:2
msgid "Lesson 1: The Basics of Muscle Definition"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:4
msgid ""
"The key to understanding muscles in the AnyBody Modeling System is to "
"realize that they mechanically consist of two separate computational "
"models:"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:8
msgid ""
"The kinematic model, which determines the muscle's path from origin to "
"insertion depending on the posture of the body. This also entails finding"
" the length and contraction velocity of the muscle."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:12
msgid ""
"The strength model which determines the muscle's strength and possibly "
"its passive elastic force depending on the kinematic state of the muscle."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:16
msgid ""
"This would be a sad excuse for a tutorial if we did not have an example "
"to work on. So let us quickly construct a very simple example that will "
"enable us to examine the properties of muscles."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:20
msgid ""
"Here's an extremely simple :download:`one-degree-of-freedom model "
"<Downloads/MuscleDemo.Ini.any>`."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:73
msgid ""
"When you load the model, open a model view window, and run the "
"SetInitialConditions operation, you should get the following picture:"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:76
msgid "|simple model|"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:78
msgid ""
"The model has a driver, so you can run the kinematic analysis and see the"
" movement. The arm flexes about the origin of the red reference frame. If"
" you try to run the InverseDynamicAnalysis, you will get an error:"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:87
msgid ""
"This is because the model does not have any muscles to balance the arm "
"against the downward pull of gravity. Let us define the simplest possible"
" muscle to carry the load. As mentioned above, a muscle has two basic "
"components: a kinematic model, and a strength model. We shall begin with "
"the latter, and for the time being define the simplest possible version."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:94
msgid ""
"If you pick the Classes tab in the right-hand side of the window, then "
"you will get access to the class tree. Expand the tree as shown in the "
"picture until you get to the AnyMuscleModel."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:98
msgid "|class tree|"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:100
msgid ""
"Notice that this class has three derived classes. These are more advanced"
" muscle models, and we shall get to those later. However for the time "
"being, place the cursor in the Editor View on an empty line just after "
"the end brace of the driver definition, right-click the AnyMuscleModel "
"class in the tree, and select \"Insert Class Template\".This causes an "
"instance of the AnyMuscleModel class to be inserted into the model (new "
"code marked with red):"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:133
msgid ""
"This is the simplest type of muscle model the system provides, and it is "
"simply a specification of strength corresponding to the assumed maximum "
"voluntary contraction of the muscle. A muscle with this type of model "
"does not have any dependency on length or contraction velocity, and it "
"does not take the passive elasticity of the tissue into account. Despite "
"this simplicity, it is used with considerable success for many studies "
"where the movements or postures are within the normal range of the "
"involved joints, and where contraction velocities are small."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:142
msgid ""
"There are two optional parameters for this model. Vol0 can be used in "
"muscle recruitment to form a muscle volume weighted sum of muscle "
"activations; see e.g. [Happee_Van_der_Hel_1995]_. ``Lf0`` can be tuned in"
" a calibration study; then using ``Vol0``, modified physiological cross "
"sectional area (``PCSA``) of the muscle can be computed by the user (e.g."
" as ``PCSA=Vol0/Lf0``), which can be used afterwards to modify the value "
"for ``F0``."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:149
msgid "Let us perform the necessary modifications to make the model useful to us:"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:161
msgid ""
"The next step is to define a muscle that can use the model. This is "
"actually the first of the two elements mentioned above: Muscle "
"kinematics."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:165
msgid ""
"Again, the AnyBody Modeling System provides a number of choices, and we "
"shall start by picking the simplest one. It is instructive to once again "
"use the tree to insert a template of the muscle object, because the tree "
"reveals the class dependency. A muscle resolves kinematical information "
"in the sense that it has a certain path from origin to insertion, and it "
"also provides force. These two properties are reflected in the way the "
"muscle classes are derived from a kinematic measure as well as force "
"classes."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:174
msgid ""
"The simplest type of muscle is the AnyViaPoint muscle. It spans the path "
"between origin and insertion by passing through any number of via points "
"on the way. The via points are fixed to segments or to the global "
"reference frame. It is a simple and convenient way to define many of the "
"simpler muscles of the body, primarily those in the extremities and the "
"spine. You can, in fact, make a pretty decent model of the legs entirely "
"with via point muscles."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:182
msgid ""
"Place the cursor right after the end brace of the musle model, right-"
"click the AnyMuscleViaPoint class in the tree, and insert an instance of "
"it:"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:186
msgid "|class tree AnyMuscleViaPoint|"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:206
msgid ""
"Let us start by filling out what we can and removing what we have no use "
"for:"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:218
msgid ""
"Notice that we have left only two points in the list of via points. This "
"is obviously the minimal requirement and will create a muscle in a single"
" line from origin to insertion. But before we proceed with the definition"
" of the muscle we must define the necessary points on the model to attach"
" the muscle to. We shall define the origin on the global reference frame "
"and the insertion on the segment:"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:252
msgid "With these two points, we can complete the definition of the muscle:"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:264
msgid ""
"Notice that we have added an AnyDrawMuscle object to the definition. Like"
" other classes in AnyScript, muscles are not drawn in the Model View "
"window unless you specifically ask for it. When you load the model and "
"run the SetInitialConditions study you will get the following picture (if"
" your model does not load, and you cannot find the error, "
":download:`click here to download a model that works "
"<Downloads/MuscleDemo.1.any>`):"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:271
msgid "|simple model with muscle|"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:273
msgid ""
"Notice that the muscle is now able to balance the gravity, and we are "
"able to run the InverseDynamicAnalysis. If you try it out and "
"subsequently open a chart view, you are able to plot the muscle force:"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:277
msgid "|https://www.anybodytech.com/fileadmin/AnyBody.3.x.x/tutorial/MuscleModeling/muscleforce1.gif|"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:279
msgid ""
"The muscle force is the item Fm in the list of properties you can plot "
"for a muscle. As you can see, lots of other properties are available, but"
" if you try to plot them you will find that many of them are zero. This "
"is because they are not relevant for this very simple type of muscle. We "
"shall return to the significance of the different properties later in "
"this tutorial."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:288
msgid "References"
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:290
msgid ""
"Happee, R., & Van der Helm, F. C. T. (1995). The control of shoulder "
"muscles during goal directed movements, an inverse dynamic analysis. "
"Journal of biomechanics, 28(10), 1179-1191."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:297
msgid ""
"**Next lesson:** For now, :doc:`let's proceed to the next lesson "
"<lesson2>` to learn how to control the way a muscle is displayed."
msgstr ""

#: ../../Muscle_modeling/lesson1.rst:317
msgid "noindex"
msgstr ""

