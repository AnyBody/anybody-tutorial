// This model is for the FDK tutorial. It is the starting point for the 
//definition of a simple knee with force-dependent kinematics features.

Main = {
  
  /// The actual body model goes in this folder
  AnyFolder MyModel = {
    
    // Global Reference Frame
    AnyFixedRefFrame GlobalRef = {
    };  // Global reference frame
    
    // Definition of the thigh segment
    AnySeg Thigh = {
      r0 = {0.4, 0, 0};
      Axes0 = RotMat(pi/2,z);
      Mass = 5;
      Jii = {0.3, 0.01, 0.3}*0.7;
      
      // This is the center of the nominal knee joint. Notice that
      // the actual knee center will vary when we use FDK.
      AnyRefNode KneeCenter = {
        sRel = {-0.03, -0.4, 0.0};
        AnyDrawRefFrame drw = {RGB = {0,0,0}; ScaleXYZ = 0.05 * {1,1,1};};
        
        // Define a cylinder representing the femoral condyle. The quadriceps
        // will wrap about this cylinder.
        AnyRefNode SurfCenter = {
          sRel = {0,0,-0.05};
          AnySurfCylinder Condyle = {
            Radius = 0.06;
            Length = 0.1;
            AnyDrawParamSurf drw = {
              RGB = {0, 0, 1};
            };
          };
        };  
        
        // Define a STL file as femoral condyle for the joint geometry. The tibial 
        // condyle will slide along this geometry.
        AnySurfSTL FemoralHead = {
          FileName = "simplefemoral.stl";
          AnyDrawSurf drw = {
            FileName = .FileName;
            Opacity = 0.5;
          };
        };
      };
      
      AnyRefNode HipCenter = {
        sRel = {0.0, 0.4, 0.0};
      };
      
      // Origin of the quadriceps muscle.
      AnyRefNode Quadriceps = {
        sRel = {0.00, 0.3, 0.0};
      };      
      AnyDrawSeg drw ={
        Opacity = 0.5;
      };
    };
    
    AnySeg Shank = {
      r0 = {0.8, -0.4, 0.0};
      Mass = 4;
      Jii = {0.4, 0.01, 0.4}*0.4;
      AnyDrawSeg drw = {
        Opacity = 0.5;
        RGB = {1,0,0};
      };
      
      
      AnyRefNode KneeCenter = {
        sRel = {0.0, 0.4, 0.0};
        AnyDrawRefFrame drw = {RGB = {1,1,1}; ScaleXYZ = 0.05 * {1,1,1};};
        
        
        // Define a STL file as tibial plateau for the joint geometry. The
        // tibial plateau will slide along the femoral condile during movement.
        AnyRefNode SurfSTLCenter = {
          sRel = {0.01,-0.04,0}; 
          AnySurfSTL TibialPlateau= {
            FileName = "simpletibial.stl";
            AnyDrawSurf drw = {
              FileName = .FileName;
              Opacity = 0.5;
            };
          };
        };
      };
      AnyRefNode Quadriceps = {
        sRel={0.05, 0.3, 0.0};
      };
    };
    
    
    // Define a contact force between the STL surfaces of the femoral condyle and 
    // the tibial plateau to make these surfaces to make the surfaces slide along
    // each other.
    AnyForceSurfaceContact ContactForce = {  
      AnySurface &surfMaster = .Thigh.KneeCenter.FemoralHead;
      AnySurface &surfSlave = .Shank.KneeCenter.SurfSTLCenter.TibialPlateau;
      PressureModule = 5e7;
      ForceViewOnOff = On;
    };
    
    
    
    
    // Hip joint between the thigh and ground
    AnyRevoluteJoint Hip = {
      AnyRefFrame &ref1 =  .GlobalRef;
      AnyRefFrame &ref2 =  .Thigh.HipCenter;      
    };
    
    // Fix the hip joint at a constant angle
    AnyKinEqSimpleDriver HipAngle = {
      AnyRevoluteJoint &Hip = .Hip;
      DriverPos = {pi/2};
      DriverVel = {0};
    };
    
    // Knee joint. Notice that this is only going to be the nominal joint.
    // The actual position of the knee joint center will depend on the forces
    // acting upon it. Notice that we list the shank before the thigh. This
    // defines the knee joint in the shank coordinate system and we can
    // relate the reaction forces to the directon of the tibial plateau.
    AnyRevoluteJoint KneeJoint = {
      AnyRefFrame &Shank = .Shank.KneeCenter;
      AnyRefFrame &Thigh = .Thigh.KneeCenter;
      
      // Prepare the joint for FDK: Define the reaction types in x and y
      // directions to be FDK-dependent. These reaction forces must then
      // be switched off and provided by some elastic element that we
      // define explicitly below.
      Constraints = {
        CType = {ForceDep, ForceDep, Hard, Hard, Hard};
        Reaction.Type={Off,Off,On,On,On};
        
      };
    };
    
    
    // Define springs in the knee, simulating the effect of cartilage
    // and ligaments.
    AnyForce KneeStiffness = {
      // AnyKinLinear &lin = .lin; 
      AnyKinLinear &lin = Main.MyModel.KneeJoint.Linear;
      F = {-1000*lin.Pos[0], -5000*lin.Pos[1], 0};
    };
    
    
    
    
    // Knee driver- just a simple knee extension.
    AnyKinEqSimpleDriver KneeDriver = {
      DriverPos = {pi/2};
      DriverVel = {-pi/30};
      AnyRevoluteJoint &KneeJoint = .KneeJoint;
      Reaction.Type={Off}; // The muscles must carry this movement
    };
    
    // Muscle
    AnyMuscleShortestPath Quadriceps = {
      AnyMuscleModel MuscleModel = {
        F0 = 6000;
      };
      AnyRefFrame &org = .Thigh.Quadriceps;
      AnyParamSurf &wrap = .Thigh.KneeCenter.SurfCenter.Condyle;
      AnyRefFrame &ins = .Shank.Quadriceps;
      SPLine = {
        StringMesh = 50;
        InitWrapPosVectors = {{0.1, 0.1, 0},{0.1, 0.2, 0}};
      };
      AnyDrawMuscle drw = {
        Bulging = 1;
        MaxStress = 2500;
      };    
    };
  }; // MyModel
  
  AnyBodyStudy Study = {
    AnyFolder &Model = .MyModel;
    Gravity = {0.0, -9.81, 0.0};
    tStart = 1;
    tEnd = 10;
    nStep = 100;
    InverseDynamics.ForceDepKinOnOff=On;    
  };
  
};  // Main










